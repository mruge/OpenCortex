services:
  # Data Abstractor Service
  data-abstractor:
    build: ./data-abstractor
    environment:
      - REDIS_URL=redis://redis:6379
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - MONGODB_URL=mongodb://mongo:27017
      - MONGODB_DATABASE=enrichment
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=embeddings
      - LOG_LEVEL=info
    depends_on:
      - redis
      - neo4j
      - mongo
      - qdrant
    restart: unless-stopped

  # AI Abstractor Service  
  ai-abstractor:
    build: ./ai-abstractor
    environment:
      - REDIS_URL=redis://redis:6379
      - AI_REQUEST_CHANNEL=ai-requests
      - AI_RESPONSE_CHANNEL=ai-responses
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4
      - OPENAI_MAX_TOKENS=4000
      - OPENAI_TEMPERATURE=0.7
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=claude-3-sonnet-20240229
      - ANTHROPIC_MAX_TOKENS=4000
      - LOG_LEVEL=info
    depends_on:
      - redis
    restart: unless-stopped

  # Exec Agent Service
  exec-agent:
    build: ./exec-agent
    environment:
      - REDIS_URL=redis://redis:6379
      - EXEC_REQUEST_CHANNEL=exec-requests
      - EXEC_RESPONSE_CHANNEL=exec-responses
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_NETWORK=smart_data_abstractor_default
      - EXEC_WORK_DIR=/tmp/exec-agent
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=exec-data
      - DATA_ABSTRACTOR_URL=http://data-abstractor:8080
      - AI_ABSTRACTOR_URL=http://ai-abstractor:8081
      - SERVICE_PROXY_PORT=9000
      - LOG_LEVEL=info
    ports:
      - "8082:8082"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - exec_workspace:/tmp/exec-agent
    depends_on:
      - redis
      - minio
    restart: unless-stopped

  # Orchestrator Service
  orchestrator:
    build: ./orchestrator
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DATABASE=0
      - ORCHESTRATOR_PORT=8080
      - ORCHESTRATOR_HOST=0.0.0.0
      - MAX_CONCURRENT_WORKFLOWS=10
      - DEFAULT_WORKFLOW_TIMEOUT=3600s
      - EXECUTION_TTL=24h
      - RECOVERY_ENABLED=true
      - RECOVERY_INTERVAL=5m
      - ORCHESTRATOR_TEMPLATES=./templates
      - ORCHESTRATOR_WORKSPACE=/tmp/orchestrator
      - LOG_LEVEL=info
    ports:
      - "8083:8080"
    volumes:
      - orchestrator_workspace:/tmp/orchestrator
    depends_on:
      - redis
      - data-abstractor
      - ai-abstractor
      - exec-agent
    restart: unless-stopped

  # Shared Infrastructure
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  neo4j:
    image: neo4j:5.15
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    restart: unless-stopped

  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  # Minio Object Storage (for exec-agent)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  mongo_data:
  qdrant_data:
  minio_data:
  exec_workspace:
  orchestrator_workspace: